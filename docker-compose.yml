version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: ./
      dockerfile: Dockerfile
    expose:
      - 8080
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

    # Frontend Service
  app-client:
    build:
      context: ./frontend # Use an image built from the specified dockerfile in the `polling-app-client` directory.
      dockerfile: Dockerfile
    ports:
      - "5000:80" # Map the exposed port 80 on the container to port 5000 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3308:3306"
    command: --init-file /data/application/init.sql
    volumes:
      - ./init.sql:/data/application/init.sql
    restart: always
    environment:
      MYSQL_DATABASE: 'task-management'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'admin'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'admin'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'

    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:
    driver: bridge